### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthResponse {
  jwt: String!
}

type CategoriesRelayed {
  edges: [Category]
  pageInfo: PageInfo
}

type Category {
  createdAt: Date!
  id: String!
  name: String
  products: [Product]
  updatedAt: Date!
}

type CmsInfo {
  schema: JSON
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  createCategory(data: JSON): Category
  createOrder(data: JSON): Order
  createProduct(data: JSON): Product
  createUser(data: JSON): User
  deleteCategory(id: String!): Category
  deleteOrder(id: String!): Order
  deleteProduct(id: String!): Product
  deleteUser(id: String!): User
  logInUser(email: String!, password: String!): AuthResponse
  logOutUser: JSON
  registerUser(email: String!, name: String, password: String!): AuthResponse
  updateCategory(data: JSON, id: String!): Category
  updateOrder(data: JSON, id: String!): Order
  updateProduct(data: JSON, id: String!): Product
  updateUser(data: JSON, id: String!): User
}

type Order {
  createdAt: Date!
  id: String!
  products: [Product]
  state: String
  updatedAt: Date!
  user: User
}

type OrdersRelayed {
  edges: [Order]
  pageInfo: PageInfo
}

type PageInfo {
  currentPage: Int!
  endCursor: Int!
  endPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: Int!
}

type Product {
  SKU: String
  category: Category
  createdAt: Date!
  description: String
  id: String!
  name: String
  orders: [Order]
  price: Int
  updatedAt: Date!
}

type ProductsRelayed {
  edges: [Product]
  pageInfo: PageInfo
}

type Query {
  categories(orderBy: JSON, skip: Int = 0, take: Int = 10, where: JSON): CategoriesRelayed
  categoryById(id: String!): Category
  me: User
  orderById(id: String!): Order
  orders(orderBy: JSON, skip: Int = 0, take: Int = 10, where: JSON): OrdersRelayed
  productById(id: String!): Product
  products(orderBy: JSON, skip: Int = 0, take: Int = 10, where: JSON): ProductsRelayed
  qcms: CmsInfo
  userById(id: String!): User
  users(orderBy: JSON, skip: Int = 0, take: Int = 10, where: JSON): UsersRelayed
}

enum Role {
  ADMIN
  USER
}

type User {
  createdAt: Date!
  email: String!
  id: String!
  name: String
  orders: Order
  role: Role
  updatedAt: Date!
}

type UsersRelayed {
  edges: [User]
  pageInfo: PageInfo
}